-- 1.找出和最貴的產品同類別的所有產品

SELECT
	*
FROM Products p
	LEFT JOIN Categories c ON p.CategoryID = c.CategoryID
WHERE c.CategoryID IN  (
	SELECT TOP 1 
		CategoryID
	FROM Products p
	ORDER BY p.UnitPrice DESC
)
ORDER BY p.UnitPrice DESC

-- 2.找出和最貴的產品同類別最便宜的產品

SELECT
	*
FROM Products
WHERE CategoryID = (
	SELECT TOP 1 
		CategoryID
	FROM Products
	ORDER BY UnitPrice DESC
)

ORDER BY UnitPrice 

-- 3.計算出上面類別最貴和最便宜的兩個產品的價差

SELECT 
	MAX(UnitPrice) AS MAXPrice,
	MIN(UnitPrice) AS MINPrice,--可以不寫
	MAX(UnitPrice) - MIN(UnitPrice) AS Spread
FROM Products p
	LEFT JOIN Categories c ON p.CategoryID = c.CategoryID
WHERE c.CategoryID IN(
	SELECT TOP 1
		p.CategoryID
	FROM Products p
	ORDER BY UnitPrice DESC
)

-- 4.找出沒有訂過任何商品的客戶所在的城市的所有客戶

SELECT
	*
FROM Customers
WHERE City IN (
	SELECT
		c.City
	FROM  Customers c
	LEFT JOIN Orders o ON o.CustomerID = c.CustomerID
	WHERE o.OrderID IS Null
)

-- 5.找出第 5 貴跟第 8 便宜的產品的產品類別

SELECT
	c.CategoryName,
	p.ProductName,p.UnitPrice,p.CategoryID
FROM Categories c
LEFT JOIN Products p ON p.CategoryID = c.CategoryID
WHERE p.ProductID IN (
(
	SELECT
		p.ProductID
	FROM Products p
	ORDER BY UnitPrice DESC
	OFFSET 4 ROWS
	FETCH NEXT 1 ROWS ONLY
),
(
	SELECT
		p.ProductID
	FROM Products p
	ORDER BY UnitPrice DESC
	OFFSET 7 ROWS
	FETCH NEXT 1 ROWS ONLY
)
)
	
-- 6.找出誰買過第 5 貴跟第 8 便宜的產品

SELECT
	o.OrderID,o.CustomerID,o.EmployeeID
FROM Orders o
LEFT JOIN [Order Details] od ON od.OrderID = o.OrderID
LEFT JOIN Products p ON p.ProductID = od.ProductID
LEFT JOIN Customers c ON c.CustomerID = o.CustomerID
WHERE p.ProductID IN (
(
	SELECT
		p.ProductID
	FROM Products p
	ORDER BY UnitPrice DESC
	OFFSET 4 ROWS
	FETCH NEXT 1 ROWS ONLY
),
(
	SELECT
		p.ProductID
	FROM Products p
	ORDER BY UnitPrice DESC
	OFFSET 7 ROWS
	FETCH NEXT 1 ROWS ONLY
)
)

-- 7.找出誰賣過第 5 貴跟第 8 便宜的產品

SELECT
	e.EmployeeID,e.LastName,e.FirstName,
	p.CategoryID
FROM Employees e
LEFT JOIN Orders o ON e.EmployeeID = o.EmployeeID
LEFT JOIN [Order Details] od ON o.OrderID = od.OrderID
LEFT JOIN Products p ON od.ProductID = p.ProductID
WHERE p.ProductID IN (
(	SELECT
		p.ProductID
	FROM Products p
	ORDER BY UnitPrice DESC
	OFFSET 4 ROWS
	FETCH NEXT 1 ROWS ONLY
),
(
	SELECT
		p.ProductID
	FROM Products p
	ORDER BY UnitPrice DESC
	OFFSET 7 ROWS
	FETCH NEXT 1 ROWS ONLY
)
)

-- 8.找出 13 號星期五的訂單 (惡魔的訂單)

SELECT 
	*
FROM Orders
WHERE DATEPART(DAY,OrderDate)=13 AND DATEPART(WEEKDAY,OrderDate)=6

-- 9.找出誰訂了惡魔的訂單

SELECT
	c.CustomerID,c.CompanyName,
	o.OrderDate
FROM Customers c
LEFT JOIN Orders o ON o.CustomerID = c.CustomerID
WHERE DATEPART(DAY,OrderDate) = 13 AND DATEPART(WEEKDAY,OrderDate) = 6

-- 10.找出惡魔的訂單裡有什麼產品

SELECT
	p.ProductID,p.ProductName,
	o.OrderDate
FROM Products p
LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID
LEFT JOIN Orders o ON od.OrderID = o.OrderID
WHERE DATEPART(DAY,OrderDate) = 13 AND DATEPART(WEEKDAY,OrderDate) = 6
ORDER BY p.ProductID

-- 11.列出從來沒有打折 (Discount) 出售的產品

SELECT DISTINCT
	od.OrderID,
	p.ProductID,p.ProductName,
	od.Discount
FROM [Order Details] od
LEFT JOIN Products p ON od.ProductID = p.ProductID
WHERE od.Discount = 0

-- 12.列出購買非本國的產品的客戶

SELECT DISTINCT
	c.CustomerID,c.CompanyName,c.Country
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
LEFT JOIN [Order Details] od ON o.OrderID = od.OrderID
LEFT JOIN Products p ON od.ProductID = p.ProductID
LEFT JOIN Suppliers s ON p.SupplierID = s.SupplierID
WHERE c.Country <> s.Country

-- 13.列出在同個城市中有公司員工可以服務的客戶


-- 14.列出那些產品沒有人買過

SELECT
	p.ProductID,p.ProductName,
	od.Quantity
FROM Products p
LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID
WHERE od.Quantity LIKE 0

----------------------------------------------------------------------------------------

-- 15.列出所有在每個月月底的訂單

SELECT
	o.OrderID,o.CustomerID,o.OrderDate
FROM Orders o
WHERE o.OrderDate = EOMONTH(o.OrderDate)

-- 16.列出每個月月底售出的產品

SELECT
	p.ProductID,p.ProductName,
	od.Quantity,od.UnitPrice,
	o.OrderID,OrderDate
FROM Products p
LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID
LEFT JOIN Orders o ON od.OrderID = o.OrderID
WHERE o.OrderDate = EOMONTH(o.OrderDate)
ORDER BY p.ProductID

-- 17.找出有敗過最貴的三個產品中的任何一個的前三個大客戶

SELECT TOP 3
	c.CustomerID,c.CompanyName,
	p.UnitPrice,
	SUM(od.UnitPrice * od.Quantity * (1-od.Discount))AS SalesAmout
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
LEFT JOIN [Order Details] od ON o.OrderID = od.OrderID
LEFT JOIN Products p ON od.ProductID = p.ProductID
WHERE p.UnitPrice IN (
	SELECT TOP 3
		p.UnitPrice
	FROM Products p
	ORDER BY p.UnitPrice DESC
)
GROUP BY c.CustomerID,c.CompanyName,p.UnitPrice
ORDER BY SalesAmout DESC

-- 18.找出有敗過銷售金額前三高個產品的前三個大客戶

SELECT TOP 3 --DISTINCT可加可不加
	c.CustomerID,c.CompanyName,
	SUM(od.UnitPrice * od.Quantity * (1-od.Discount))AS SalesAmout
FROM Customers c
INNER JOIN Orders o ON o.CustomerID = c.CustomerID
INNER JOIN [Order Details] od ON od.OrderID = o.OrderID
WHERE od.ProductID IN (
	SELECT TOP 3
		od.ProductID
	FROM [Order Details] od
	GROUP BY od.ProductID
	ORDER BY SUM(od.UnitPrice * od.Quantity * (1-od.Discount))DESC
)
GROUP BY c.CustomerID,c.CompanyName
ORDER BY SalesAmout DESC

-- 19.找出有敗過銷售金額前三高個產品所屬類別的前三個大客戶


-- 20.列出消費總金額高於所有客戶平均消費總金額的客戶的名字，以及客戶的消費總金額

-- 21.列出最熱銷的產品，以及被購買的總金額

-- 22.列出最少人買的產品

-- 23.列出最沒人要買的產品類別 (Categories)

-- 24.列出跟銷售最好的供應商買最多金額的客戶與購買金額 (含購買其它供應商的產品)

-- 25.列出跟銷售最好的供應商買最多金額的客戶與購買金額 (不含購買其它供應商的產品)

-- 26.列出那些產品沒有人買過

-- 27.列出沒有傳真 (Fax) 的客戶和它的消費總金額

-- 28.列出每一個城市消費的產品種類數量

-- 29.列出目前沒有庫存的產品在過去總共被訂購的數量

-- 30.列出目前沒有庫存的產品在過去曾經被那些客戶訂購過

-- 31.列出每位員工的下屬的業績總金額

-- 32.列出每家貨運公司運送最多的那一種產品類別與總數量

-- 33.列出每一個客戶買最多的產品類別與金額

-- 34.列出每一個客戶買最多的那一個產品與購買數量

-- 35.按照城市分類，找出每一個城市最近一筆訂單的送貨時間

-- 36.列出購買金額第五名與第十名的客戶，以及兩個客戶的金額差距

